{"version":3,"sources":["components/Header.jsx","components/CheckboxComponent.jsx","components/Interface.jsx","App.js","index.js"],"names":["Header","className","CheckboxComponent","changeCheckbox","FormControlLabel","control","Checkbox","onChange","color","inputProps","label","Interface","inputRef","useRef","useState","isShowed","setisShowed","inputValue","setinputValue","isChecked","setisChecked","strings","setStrings","filteredStrings","setfilteredStrings","useEffect","fetchData","a","axios","get","response","data","type","e","current","value","trim","target","ref","style","display","onClick","filtered","filter","string","length","Number","includes","toLowerCase","toUpperCase","map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAEaA,EAAS,WAClB,OACI,qBAAKC,UAAU,SAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,gBAAf,SACI,oBAAIA,UAAU,eAAd,iC,kECHPC,EAAoB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAEhC,OACE,qBAAKF,UAAU,WAAf,SACE,cAACG,EAAA,EAAD,CACAC,QAAS,cAACC,EAAA,EAAD,CAAUC,SAAUJ,EAAgBK,MAAM,UAAUC,WAAY,CAAE,aAAc,wBACzFC,MAAM,gKCNDC,EAAY,WAErB,IAAMC,EAAWC,mBAEjB,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAEA,EAA8BN,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEA,EAA8CR,mBAAS,IAAvD,mBAAOS,EAAP,KAAwBC,EAAxB,KAEAC,qBAAW,WACPC,MACD,IAEH,IAAMA,EAAS,uCAAG,4BAAAC,EAAA,sEACSC,IAAMC,IAAI,uEADnB,OACRC,EADQ,OAEdR,EAAWQ,EAASC,KAAKA,MAFX,2CAAH,qDAsCf,OACI,qBAAK9B,UAAU,YAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,mBAAf,UACA,sBAAKA,UAAU,iBAAf,UACI,uBAAO+B,KAAK,OAAO/B,UAAU,SAASM,SAAU,SAAC0B,GAC1CrB,EAASsB,QAAQC,MAAMC,QACtBpB,GAAY,GAEhBE,EAAce,EAAEI,OAAOF,MAAMC,SAC9BE,IAAK1B,IACR,mBAAG2B,MAAO,CAACC,QAASzB,EAAW,QAAU,QAASd,UAAU,OAA5D,mJAEJ,sBAAKA,UAAU,yBAAf,UACI,wBAAQwC,QA/CD,WACnB,GAAkB,KAAfxB,EACCD,GAAY,OACT,CACH,IAAM0B,EAAWrB,EAAQsB,QAAO,SAAAC,GAC5B,OAAOA,EAAOC,OAASC,OAAO7B,MAElCO,EAAmBkB,KAwCX,4HACA,wBAAQD,QArCD,WACnB,GAAkB,KAAfxB,EACCD,GAAY,QAEZ,GAAGG,EAAU,CACT,IAAMuB,EAAWrB,EAAQsB,QAAO,SAAAC,GAC5B,OAAOA,EAAOG,SAAS9B,MAE3BO,EAAmBkB,OACjB,CACF,IAAMA,EAAWrB,EAAQsB,QAAO,SAAAC,GAC5B,OAAOA,EAAOI,cAAcD,SAAS9B,EAAW+B,cAAcZ,SAAWQ,EAAOK,cAAcF,SAAS9B,EAAWgC,cAAcb,WAEpIZ,EAAmBkB,KAwBf,uJAEJ,cAAC,EAAD,CAAmBvC,eArBR,WACnBiB,GAAcD,MAqBN,sBAAKlB,UAAU,kBAAf,UACI,sBAAMA,UAAU,mBAAhB,8IACA,oBAAIA,UAAU,qBAAd,SAEQsB,EAAgB2B,KAAI,SAAAN,GAChB,OACI,6BAAkBA,GAATA,mBCtE9BO,G,MATH,WACV,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,SCLNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0ca2a7ca.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <div className=\"header__inner\">\r\n                    <h1 className=\"header__logo\">React Filter</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nexport const CheckboxComponent = ({ changeCheckbox }) => {\r\n\r\n    return (\r\n      <div className=\"checkbox\">\r\n        <FormControlLabel\r\n        control={<Checkbox onChange={changeCheckbox} color=\"primary\" inputProps={{ 'aria-label': 'secondary checkbox' }}/>}\r\n        label=\"Чувствительность к регистру\"\r\n      />\r\n      </div> \r\n    )\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { CheckboxComponent } from './CheckboxComponent'\r\n\r\nexport const Interface = () => {\r\n\r\n    const inputRef = useRef();\r\n\r\n    const [isShowed, setisShowed] = useState(false);\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const [isChecked, setisChecked] = useState(false);\r\n\r\n    const [strings, setStrings] = useState([]);\r\n\r\n    const [filteredStrings, setfilteredStrings] = useState([]);\r\n\r\n    useEffect( () => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const fetchData = async () => {\r\n        const response = await axios.get('https://cors-anywhere.herokuapp.com/https://www.mrsoft.by/data.json');\r\n        setStrings(response.data.data)\r\n    }\r\n\r\n    const filterByLength = () => {\r\n        if(inputValue === ''){\r\n            setisShowed(true);\r\n        } else {\r\n            const filtered = strings.filter(string => {\r\n                return string.length > Number(inputValue)\r\n            });\r\n            setfilteredStrings(filtered);\r\n        }\r\n    }\r\n\r\n    const filterByString = () => {\r\n        if(inputValue === ''){\r\n            setisShowed(true);\r\n        } else {\r\n            if(isChecked){\r\n                const filtered = strings.filter(string => {\r\n                    return string.includes(inputValue);\r\n                });\r\n                setfilteredStrings(filtered);\r\n            } else{\r\n                const filtered = strings.filter(string => {\r\n                    return string.toLowerCase().includes(inputValue.toLowerCase().trim()) || string.toUpperCase().includes(inputValue.toUpperCase().trim());\r\n                });\r\n                setfilteredStrings(filtered);\r\n            }\r\n        }\r\n    }\r\n\r\n    const changeCheckbox = () => {\r\n        setisChecked(!isChecked);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"interface\">\r\n                <div className=\"interface__inner\">\r\n                <div className=\"interface__row\">\r\n                    <input type=\"text\" className=\"search\" onChange={(e) => {\r\n                        if(inputRef.current.value.trim()){\r\n                            setisShowed(false);\r\n                        }\r\n                        setinputValue(e.target.value.trim());\r\n                    }} ref={inputRef}/>\r\n                    <p style={{display: isShowed ? 'block' : 'none'}} className=\"text\">Введите что-нибудь в поле</p>\r\n                </div>\r\n                <div className=\"interface__row buttons\">\r\n                    <button onClick={filterByLength}>Фильтровать по длине</button>\r\n                    <button onClick={filterByString}>Фильтровать по подстроке</button>\r\n                </div>\r\n                <CheckboxComponent changeCheckbox={changeCheckbox}/>\r\n                <div className=\"interface__data\">\r\n                    <span className=\"interface__title\">Отфильтрованные строки:</span>\r\n                    <ul className=\"interface__strings\">\r\n                        {\r\n                            filteredStrings.map(string => {\r\n                                return (\r\n                                    <li key={string}>{string}</li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import { Header } from \"./components/Header\";\nimport { Interface } from \"./components/Interface\";\n\nimport './styles/main.scss'\n\nconst App = () => {\n  return (\n    <div>\n      <Header/>\n      <Interface/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}